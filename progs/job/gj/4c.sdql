let mk = load[<id: @vec {int -> int}, movie_id: @vec {int -> int}, keyword_id: @vec {int -> int}, size: int>]("datasets/job/movie_keyword.csv")
let t = load[<id: @vec {int -> int}, title: @vec {int -> string}, imdb_index: @vec {int -> string}, kind_id: @vec {int -> int}, production_year: @vec {int -> int}, imdb_id: @vec {int -> string}, phonetic_code: @vec {int -> string}, episode_of_id: @vec {int -> int}, season_nr: @vec {int -> int}, episode_nr: @vec {int -> int}, series_years: @vec {int -> string}, md5sum: @vec {int -> string}, size: int>]("datasets/job/4c/t.csv")
let mi_idx = load[<id: @vec {int -> int}, movie_id: @vec {int -> int}, info_type_id: @vec {int -> int}, info: @vec {int -> string}, note: @vec {int -> string}, size: int>]("datasets/job/4c/mi_idx.csv")
let k = load[<id: @vec {int -> int}, keyword: @vec {int -> string}, phonetic_code: @vec {int -> string}, size: int>]("datasets/job/4c/k.csv")
let it = load[<id: @vec {int -> int}, info: @vec {int -> string}, size: int>]("datasets/job/4c/it.csv")

let mk_trie0 = sum(<i,_> <- range(mk.size)) { mk.movie_id(i) -> { mk.keyword_id(i) -> 1 } } in
let t_trie0 = sum(<i,_> <- range(t.size)) { t.id(i) -> @vecdict { i -> 1 } } in
let mi_idx_trie0 = sum(<i,_> <- range(mi_idx.size)) { mi_idx.movie_id(i) -> { mi_idx.info_type_id(i) -> @vecdict { i -> 1 } } } in
let k_trie0 = sum(<i,_> <- range(k.size)) { k.id(i) -> 1 } in
let it_trie0 = sum(<i,_> <- range(it.size)) { it.id(i) -> 1 } in
sum(<x0, mk_trie1> <- mk_trie0)
	if (x0 ∈ t_trie0) then
		if (x0 ∈ mi_idx_trie0) then
			let t_trie1 = t_trie0(x0) in
			let mi_idx_trie1 = mi_idx_trie0(x0) in
			sum(<x1, mk_trie2> <- mk_trie1)
				if (x1 ∈ k_trie0) then
					let k_trie1 = k_trie0(x1) in
					sum(<x2, mi_idx_trie2> <- mi_idx_trie1)
						if (x2 ∈ it_trie0) then
							let it_trie1 = it_trie0(x2) in
							let mn_t = sum(<i, _> <- t_trie1) promote[min_sum](<title=t.title(i)>) in
							let mn_mi_idx = sum(<i, _> <- mi_idx_trie2) promote[min_sum](<info=mi_idx.info(i)>) in
							promote[min_sum](<col2=mn_t.title, col4=mn_mi_idx.info>)
