let n = load[<id: @vector {int -> int}, name: @vector {int -> string}, imdb_index: @vector {int -> string}, imdb_id: @vector {int -> string}, gender: @vector {int -> string}, name_pcode_cf: @vector {int -> string}, name_pcode_nf: @vector {int -> string}, surname_pcode: @vector {int -> string}, md5sum: @vector {int -> string}, size: int>]("datasets/job/7a/n.csv")
let pi = load[<id: @vector {int -> int}, person_id: @vector {int -> int}, info_type_id: @vector {int -> int}, info: @vector {int -> string}, note: @vector {int -> string}, size: int>]("datasets/job/7a/pi.csv")
let it = load[<id: @vector {int -> int}, info: @vector {int -> string}, size: int>]("datasets/job/7a/it.csv")
let t = load[<id: @vector {int -> int}, title: @vector {int -> string}, imdb_index: @vector {int -> string}, kind_id: @vector {int -> int}, production_year: @vector {int -> int}, imdb_id: @vector {int -> string}, phonetic_code: @vector {int -> string}, episode_of_id: @vector {int -> int}, season_nr: @vector {int -> int}, episode_nr: @vector {int -> int}, series_years: @vector {int -> string}, md5sum: @vector {int -> string}, size: int>]("datasets/job/7a/t.csv")
let ml = load[<id: @vector {int -> int}, movie_id: @vector {int -> int}, linked_movie_id: @vector {int -> int}, link_type_id: @vector {int -> int}, size: int>]("datasets/job/movie_link.csv")
let lt = load[<id: @vector {int -> int}, link: @vector {int -> string}, size: int>]("datasets/job/7a/lt.csv")
let ci = load[<id: @vector {int -> int}, person_id: @vector {int -> int}, movie_id: @vector {int -> int}, person_role_id: @vector {int -> int}, note: @vector {int -> string}, nr_order: @vector {int -> int}, role_id: @vector {int -> int}, size: int>]("datasets/job/cast_info.csv")
let an = load[<id: @vector {int -> int}, person_id: @vector {int -> int}, name: @vector {int -> string}, imdb_index: @vector {int -> string}, name_pcode_cf: @vector {int -> string}, name_pcode_nf: @vector {int -> string}, surname_pcode: @vector {int -> string}, md5sum: @vector {int -> string}, size: int>]("datasets/job/7a/an.csv")

let n_trie0 = sum(<i,_> <- range(n.size)) { n.id(i) -> @vecdict { i -> 1 } } in
let pi_trie0 = sum(<i,_> <- range(pi.size)) { pi.person_id(i) -> { pi.info_type_id(i) -> @vecdict { i -> 1 } } } in
let it_trie0 = sum(<i,_> <- range(it.size)) { it.id(i) -> @vecdict { i -> 1 } } in
let interm0_trie0 = sum(<x0, n_trie1> <- n_trie0)
	if (x0 ∈ pi_trie0) then
		let pi_trie1 = pi_trie0(x0) in
		sum(<x1, pi_trie2> <- pi_trie1)
			if (x1 ∈ it_trie0) then
				let it_trie1 = it_trie0(x1) in
				sum(<i, _> <- n_trie1)
					sum(<j, _> <- pi_trie2)
						{ n.id(i) -> @vecs { <col0=n.id(i), col1=n.name(i), col2=pi.info_type_id(j)> -> 1 } }
in

let t_trie0 = sum(<i,_> <- range(t.size)) { t.id(i) -> @vecdict { i -> 1 } } in
let ml_trie0 = sum(<i,_> <- range(ml.size)) { ml.linked_movie_id(i) -> { ml.link_type_id(i) -> @vecdict { i -> 1 } } } in
let lt_trie0 = sum(<i,_> <- range(lt.size)) { lt.id(i) -> @vecdict { i -> 1 } } in
let interm1_trie0 = sum(<x0, t_trie1> <- t_trie0)
	if (x0 ∈ ml_trie0) then
		let ml_trie1 = ml_trie0(x0) in
		sum(<x1, ml_trie2> <- ml_trie1)
			if (x1 ∈ lt_trie0) then
				let lt_trie1 = lt_trie0(x1) in
				sum(<i, _> <- t_trie1)
					sum(<j, _> <- ml_trie2)
						{ t.id(i) -> @vecs { <col0=t.id(i), col1=t.title(i), col2=ml.link_type_id(j)> -> 1 } }
in

let ci_trie0 = sum(<i,_> <- range(ci.size)) { ci.movie_id(i) -> { ci.person_id(i) -> 1 } } in
let an_trie0 = sum(<i,_> <- range(an.size)) { an.person_id(i) -> 1 } in
sum(<x0, ci_trie1> <- ci_trie0)
	if (x0 ∈ interm1_trie0) then
		let interm1_trie1 = interm1_trie0(x0) in
		sum(<x1, ci_trie2> <- ci_trie1)
			if (x1 ∈ interm0_trie0) then
				if (x1 ∈ an_trie0) then
					let interm0_trie1 = interm0_trie0(x1) in
					let an_trie1 = an_trie0(x1) in
					let mn_interm1 = sum(<interm1_tuple, _> <- interm1_trie1) promote[min_sum](<col1=interm1_tuple.col1>) in
					let mn_interm0 = sum(<interm0_tuple, _> <- interm0_trie1) promote[min_sum](<col1=interm0_tuple.col1>) in
					promote[min_sum](<col2=mn_interm1.col1, col4=mn_interm0.col1>)
