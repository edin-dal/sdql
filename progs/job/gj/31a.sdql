let mk = load[<id: @vec {int -> int}, movie_id: @vec {int -> int}, keyword_id: @vec {int -> int}, size: int>]("datasets/job/movie_keyword.csv")
let t = load[<id: @vec {int -> int}, title: @vec {int -> string}, imdb_index: @vec {int -> string}, kind_id: @vec {int -> int}, production_year: @vec {int -> int}, imdb_id: @vec {int -> string}, phonetic_code: @vec {int -> string}, episode_of_id: @vec {int -> int}, season_nr: @vec {int -> int}, episode_nr: @vec {int -> int}, series_years: @vec {int -> string}, md5sum: @vec {int -> string}, size: int>]("datasets/job/title.csv")
let mi_idx = load[<id: @vec {int -> int}, movie_id: @vec {int -> int}, info_type_id: @vec {int -> int}, info: @vec {int -> string}, note: @vec {int -> string}, size: int>]("datasets/job/movie_info_idx.csv")
let mi = load[<id: @vec {int -> int}, movie_id: @vec {int -> int}, info_type_id: @vec {int -> int}, info: @vec {int -> string}, note: @vec {int -> string}, size: int>]("datasets/job/31a/mi.csv")
let mc = load[<id: @vec {int -> int}, movie_id: @vec {int -> int}, company_id: @vec {int -> int}, company_type_id: @vec {int -> int}, note: @vec {int -> string}, size: int>]("datasets/job/movie_companies.csv")
let k = load[<id: @vec {int -> int}, keyword: @vec {int -> string}, phonetic_code: @vec {int -> string}, size: int>]("datasets/job/31a/k.csv")
let it2 = load[<id: @vec {int -> int}, info: @vec {int -> string}, size: int>]("datasets/job/31a/it2.csv")
let it1 = load[<id: @vec {int -> int}, info: @vec {int -> string}, size: int>]("datasets/job/31a/it1.csv")
let cn = load[<id: @vec {int -> int}, name: @vec {int -> string}, country_code: @vec {int -> string}, imdb_id: @vec {int -> string}, name_pcode_nf: @vec {int -> string}, name_pcode_sf: @vec {int -> string}, md5sum: @vec {int -> string}, size: int>]("datasets/job/31a/cn.csv")
let ci = load[<id: @vec {int -> int}, person_id: @vec {int -> int}, movie_id: @vec {int -> int}, person_role_id: @vec {int -> int}, note: @vec {int -> string}, nr_order: @vec {int -> int}, role_id: @vec {int -> int}, size: int>]("datasets/job/31a/ci.csv")
let n = load[<id: @vec {int -> int}, name: @vec {int -> string}, imdb_index: @vec {int -> string}, imdb_id: @vec {int -> string}, gender: @vec {int -> string}, name_pcode_cf: @vec {int -> string}, name_pcode_nf: @vec {int -> string}, surname_pcode: @vec {int -> string}, md5sum: @vec {int -> string}, size: int>]("datasets/job/31a/n.csv")

let mk_trie0 = sum(<i,_> <- range(mk.size)) { mk.movie_id(i) -> @vecdict { i -> 1 } } in
let t_trie0 = sum(<i,_> <- range(t.size)) { t.id(i) -> @vecdict { i -> 1 } } in
let mi_idx_trie0 = sum(<i,_> <- range(mi_idx.size)) { mi_idx.movie_id(i) -> @vecdict { i -> 1 } } in
let interm0_trie0 = sum(<x0, mk_trie1> <- mk_trie0)
	if (x0 ∈ t_trie0) then
		if (x0 ∈ mi_idx_trie0) then
			let t_trie1 = t_trie0(x0) in
			let mi_idx_trie1 = mi_idx_trie0(x0) in
			sum(<i, _> <- mk_trie1)
				sum(<j, _> <- t_trie1)
					sum(<k, _> <- mi_idx_trie1)
						{ mk.movie_id(i) -> { mk.keyword_id(i) -> { mi_idx.info_type_id(k) -> @vecs { <col0=mk.movie_id(i), col1=mk.keyword_id(i), col2=t.title(j), col3=mi_idx.info_type_id(k), col4=mi_idx.info(k)> -> 1 } } } }
in

let mi_trie0 = sum(<i,_> <- range(mi.size)) { mi.movie_id(i) -> { mi.info_type_id(i) -> @vecdict { i -> 1 } } } in
let mc_trie0 = sum(<i,_> <- range(mc.size)) { mc.movie_id(i) -> { mc.company_id(i) -> @vecdict { i -> 1 } } } in
let k_trie0 = sum(<i,_> <- range(k.size)) { k.id(i) -> @vecdict { i -> 1 } } in
let it2_trie0 = sum(<i,_> <- range(it2.size)) { it2.id(i) -> @vecdict { i -> 1 } } in
let it1_trie0 = sum(<i,_> <- range(it1.size)) { it1.id(i) -> @vecdict { i -> 1 } } in
let cn_trie0 = sum(<i,_> <- range(cn.size)) { cn.id(i) -> @vecdict { i -> 1 } } in
let interm1_trie0 = sum(<x0, mi_trie1> <- mi_trie0)
	if (x0 ∈ interm0_trie0) then
		if (x0 ∈ mc_trie0) then
			let interm0_trie1 = interm0_trie0(x0) in
			let mc_trie1 = mc_trie0(x0) in
			sum(<x1, interm0_trie2> <- interm0_trie1)
				if (x1 ∈ k_trie0) then
					let k_trie1 = k_trie0(x1) in
					sum(<x2, interm0_trie3> <- interm0_trie2)
						if (x2 ∈ it2_trie0) then
							let it2_trie1 = it2_trie0(x2) in
							sum(<x3, mi_trie2> <- mi_trie1)
								if (x3 ∈ it1_trie0) then
									let it1_trie1 = it1_trie0(x3) in
									sum(<x4, mc_trie2> <- mc_trie1)
										if (x4 ∈ cn_trie0) then
											let cn_trie1 = cn_trie0(x4) in
											sum(<i, _> <- mi_trie2)
												sum(<interm0_tuple, _> <- interm0_trie3)
													sum(<j, _> <- mc_trie2)
														{ mi.movie_id(i) -> @vecs { <col0=mi.movie_id(i), col1=mi.info_type_id(i), col2=mi.info(i), col3=interm0_tuple.col1, col4=interm0_tuple.col3, col5=interm0_tuple.col2, col6=interm0_tuple.col4, col7=mc.company_id(j)> -> 1 } }
in

let ci_trie0 = sum(<i,_> <- range(ci.size)) { ci.person_id(i) -> { ci.movie_id(i) -> 1 } } in
let n_trie0 = sum(<i,_> <- range(n.size)) { n.id(i) -> @vecdict { i -> 1 } } in
sum(<x0, ci_trie1> <- ci_trie0)
	if (x0 ∈ n_trie0) then
		let n_trie1 = n_trie0(x0) in
		sum(<x1, ci_trie2> <- ci_trie1)
			if (x1 ∈ interm1_trie0) then
				let interm1_trie1 = interm1_trie0(x1) in
				let mn_n = sum(<i, _> <- n_trie1) promote[min_sum](<name=n.name(i)>) in
				let mn_interm1 = sum(<interm1_tuple, _> <- interm1_trie1) promote[min_sum](<col2=interm1_tuple.col2, col5=interm1_tuple.col5, col6=interm1_tuple.col6>) in
				promote[min_sum](<col2=mn_n.name, col4=mn_interm1.col2, col7=mn_interm1.col5, col8=mn_interm1.col6>)
