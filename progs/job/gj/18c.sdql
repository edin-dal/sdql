let t = load[{<id: int, title: string, imdb_index: string, kind_id: int, production_year: int, imdb_id: string, phonetic_code: string, episode_of_id: int, season_nr: int, episode_nr: int, series_years: string, md5sum: string> -> int}]("datasets/job/title.csv")
let mi_idx = load[{<id: int, movie_id: int, info_type_id: int, info: string, note: string> -> int}]("datasets/job/movie_info_idx.csv")
let mi = load[{<id: int, movie_id: int, info_type_id: int, info: string, note: string> -> int}]("datasets/job/18c/mi.csv")
let it2 = load[{<id: int, info: string> -> int}]("datasets/job/18c/it2.csv")
let it1 = load[{<id: int, info: string> -> int}]("datasets/job/18c/it1.csv")
let ci = load[{<id: int, person_id: int, movie_id: int, person_role_id: int, note: string, nr_order: int, role_id: int> -> int}]("datasets/job/18c/ci.csv")
let n = load[{<id: int, name: string, imdb_index: string, imdb_id: string, gender: string, name_pcode_cf: string, name_pcode_nf: string, surname_pcode: string, md5sum: string> -> int}]("datasets/job/18c/n.csv")

let t_trie0 = sum_vec(<t_tuple, _> <- t) { t_tuple.id -> { t_tuple -> 1 } } in
let mi_idx_trie0 = sum_vec(<mi_idx_tuple, _> <- mi_idx) { mi_idx_tuple.movie_id -> { mi_idx_tuple -> 1 } } in
let interm0_trie0 = sum_vec(<x0, t_trie1> <- t_trie0)
	if (x0 ∈ mi_idx_trie0) then
		let mi_idx_trie1 = mi_idx_trie0(x0) in
		sum_vec(<t_tuple, _> <- t_trie1)
			sum_vec(<mi_idx_tuple, _> <- mi_idx_trie1)
				{ t_tuple.id -> { mi_idx_tuple.info_type_id -> { <col0=t_tuple.id, col1=t_tuple.title, col2=mi_idx_tuple.info_type_id, col3=mi_idx_tuple.info> -> 1 } } }
in

let mi_trie0 = sum_vec(<mi_tuple, _> <- mi) { mi_tuple.movie_id -> { mi_tuple.info_type_id -> { mi_tuple -> 1 } } } in
let it2_trie0 = sum_vec(<it2_tuple, _> <- it2) { it2_tuple.id -> { it2_tuple -> 1 } } in
let it1_trie0 = sum_vec(<it1_tuple, _> <- it1) { it1_tuple.id -> { it1_tuple -> 1 } } in
let interm1_trie0 = sum_vec(<x0, mi_trie1> <- mi_trie0)
	if (x0 ∈ interm0_trie0) then
		let interm0_trie1 = interm0_trie0(x0) in
		sum_vec(<x1, interm0_trie2> <- interm0_trie1)
			if (x1 ∈ it2_trie0) then
				let it2_trie1 = it2_trie0(x1) in
				sum_vec(<x2, mi_trie2> <- mi_trie1)
					if (x2 ∈ it1_trie0) then
						let it1_trie1 = it1_trie0(x2) in
						sum_vec(<mi_tuple, _> <- mi_trie2)
							sum_vec(<interm0_tuple, _> <- interm0_trie2)
								{ mi_tuple.movie_id -> { <col0=mi_tuple.movie_id, col1=mi_tuple.info_type_id, col2=mi_tuple.info, col3=interm0_tuple.col2, col4=interm0_tuple.col1, col5=interm0_tuple.col3> -> 1 } }
in

let ci_trie0 = sum(<ci_tuple, _> <- ci) { ci_tuple.person_id -> { ci_tuple.movie_id -> 1 } } in
let n_trie0 = sum(<n_tuple, _> <- n) { n_tuple.id -> 1 } in
sum(<x0, ci_trie1> <- ci_trie0)
	if (x0 ∈ n_trie0) then
		let n_trie1 = n_trie0(x0) in
		sum(<x1, ci_trie2> <- ci_trie1)
			if (x1 ∈ interm1_trie0) then
				let interm1_trie1 = interm1_trie0(x1) in
				let mn_interm1 = sum(<interm1_tuple, _> <- interm1_trie1) promote[min_sum](<col2=interm1_tuple.col2, col4=interm1_tuple.col4, col5=interm1_tuple.col5>) in
				promote[min_sum](<col3=mn_interm1.col2, col5=mn_interm1.col4, col6=mn_interm1.col5>)
