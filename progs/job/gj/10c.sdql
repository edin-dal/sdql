let mc = load[<id: @vector {int -> int}, movie_id: @vector {int -> int}, company_id: @vector {int -> int}, company_type_id: @vector {int -> int}, note: @vector {int -> string}, size: int>]("datasets/job/movie_companies.csv")
let t = load[<id: @vector {int -> int}, title: @vector {int -> string}, imdb_index: @vector {int -> string}, kind_id: @vector {int -> int}, production_year: @vector {int -> int}, imdb_id: @vector {int -> string}, phonetic_code: @vector {int -> string}, episode_of_id: @vector {int -> int}, season_nr: @vector {int -> int}, episode_nr: @vector {int -> int}, series_years: @vector {int -> string}, md5sum: @vector {int -> string}, size: int>]("datasets/job/10c/t.csv")
let ct = load[<id: @vector {int -> int}, kind: @vector {int -> string}, size: int>]("datasets/job/company_type.csv")
let cn = load[<id: @vector {int -> int}, name: @vector {int -> string}, country_code: @vector {int -> string}, imdb_id: @vector {int -> string}, name_pcode_nf: @vector {int -> string}, name_pcode_sf: @vector {int -> string}, md5sum: @vector {int -> string}, size: int>]("datasets/job/10c/cn.csv")
let ci = load[<id: @vector {int -> int}, person_id: @vector {int -> int}, movie_id: @vector {int -> int}, person_role_id: @vector {int -> int}, note: @vector {int -> string}, nr_order: @vector {int -> int}, role_id: @vector {int -> int}, size: int>]("datasets/job/10c/ci.csv")
let rt = load[<id: @vector {int -> int}, role: @vector {int -> string}, size: int>]("datasets/job/role_type.csv")
let chn = load[<id: @vector {int -> int}, name: @vector {int -> string}, imdb_index: @vector {int -> string}, imdb_id: @vector {int -> int}, name_pcode_cf: @vector {int -> string}, surname_pcode: @vector {int -> string}, md5sum: @vector {int -> string}, size: int>]("datasets/job/char_name.csv")

let mc_trie0 = sum(<i,_> <- range(mc.size)) { mc.movie_id(i) -> { mc.company_type_id(i) -> { mc.company_id(i) -> @vecdict { i -> 1 } } } } in
let t_trie0 = sum(<i,_> <- range(t.size)) { t.id(i) -> @vecdict { i -> 1 } } in
let ct_trie0 = sum(<i,_> <- range(ct.size)) { ct.id(i) -> @vecdict { i -> 1 } } in
let cn_trie0 = sum(<i,_> <- range(cn.size)) { cn.id(i) -> @vecdict { i -> 1 } } in
let interm0_trie0 = sum(<x0, mc_trie1> <- mc_trie0)
	if (x0 ∈ t_trie0) then
		let t_trie1 = t_trie0(x0) in
		sum(<x1, mc_trie2> <- mc_trie1)
			if (x1 ∈ ct_trie0) then
				let ct_trie1 = ct_trie0(x1) in
				sum(<x2, mc_trie3> <- mc_trie2)
					if (x2 ∈ cn_trie0) then
						let cn_trie1 = cn_trie0(x2) in
						sum(<i, _> <- mc_trie3)
							sum(<j, _> <- t_trie1)
								{ mc.movie_id(i) -> @vecs { <col0=mc.movie_id(i), col1=mc.company_type_id(i), col2=mc.company_id(i), col3=t.title(j)> -> 1 } }
in

let ci_trie0 = sum(<i,_> <- range(ci.size)) { ci.role_id(i) -> { ci.movie_id(i) -> { ci.person_role_id(i) -> 1 } } } in
let rt_trie0 = sum(<i,_> <- range(rt.size)) { rt.id(i) -> 1 } in
let chn_trie0 = sum(<i,_> <- range(chn.size)) { chn.id(i) -> @vecdict { i -> 1 } } in
sum(<x0, ci_trie1> <- ci_trie0)
	if (x0 ∈ rt_trie0) then
		let rt_trie1 = rt_trie0(x0) in
		sum(<x1, ci_trie2> <- ci_trie1)
			if (x1 ∈ interm0_trie0) then
				let interm0_trie1 = interm0_trie0(x1) in
				sum(<x2, ci_trie3> <- ci_trie2)
					if (x2 ∈ chn_trie0) then
						let chn_trie1 = chn_trie0(x2) in
						let mn_interm0 = sum(<interm0_tuple, _> <- interm0_trie1) promote[min_sum](<col3=interm0_tuple.col3>) in
						let mn_chn = sum(<i, _> <- chn_trie1) promote[min_sum](<name=chn.name(i)>) in
						promote[min_sum](<col5=mn_interm0.col3, col6=mn_chn.name>)
