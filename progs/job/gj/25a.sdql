let mk = load[{<id: int, movie_id: int, keyword_id: int> -> int}]("datasets/job/movie_keyword.csv")
let t = load[{<id: int, title: string, imdb_index: string, kind_id: int, production_year: int, imdb_id: string, phonetic_code: string, episode_of_id: int, season_nr: int, episode_nr: int, series_years: string, md5sum: string> -> int}]("datasets/job/title.csv")
let mi_idx = load[{<id: int, movie_id: int, info_type_id: int, info: string, note: string> -> int}]("datasets/job/movie_info_idx.csv")
let mi = load[{<id: int, movie_id: int, info_type_id: int, info: string, note: string> -> int}]("datasets/job/25a/mi.csv")
let k = load[{<id: int, keyword: string, phonetic_code: string> -> int}]("datasets/job/25a/k.csv")
let it2 = load[{<id: int, info: string> -> int}]("datasets/job/25a/it2.csv")
let it1 = load[{<id: int, info: string> -> int}]("datasets/job/25a/it1.csv")
let ci = load[{<id: int, person_id: int, movie_id: int, person_role_id: int, note: string, nr_order: int, role_id: int> -> int}]("datasets/job/25a/ci.csv")
let n = load[{<id: int, name: string, imdb_index: string, imdb_id: string, gender: string, name_pcode_cf: string, name_pcode_nf: string, surname_pcode: string, md5sum: string> -> int}]("datasets/job/25a/n.csv")

let mk_trie0 = sum(<mk_tuple, _> <- mk) { mk_tuple.movie_id -> { mk_tuple -> 1 } } in
let t_trie0 = sum(<t_tuple, _> <- t) { t_tuple.id -> { t_tuple -> 1 } } in
let mi_idx_trie0 = sum(<mi_idx_tuple, _> <- mi_idx) { mi_idx_tuple.movie_id -> { mi_idx_tuple -> 1 } } in
let interm0_trie0 = sum(<x0, mk_trie1> <- mk_trie0)
	if (x0 ∈ t_trie0) then
		if (x0 ∈ mi_idx_trie0) then
			let t_trie1 = t_trie0(x0) in
			let mi_idx_trie1 = mi_idx_trie0(x0) in
			sum(<mk_tuple, _> <- mk_trie1)
				sum(<t_tuple, _> <- t_trie1)
					sum(<mi_idx_tuple, _> <- mi_idx_trie1)
						{ mk_tuple.movie_id -> { mk_tuple.keyword_id -> { mi_idx_tuple.info_type_id -> { <col0=mk_tuple.movie_id, col1=mk_tuple.keyword_id, col2=t_tuple.title, col3=mi_idx_tuple.info_type_id, col4=mi_idx_tuple.info> -> 1 } } } }
		else
			{}
	else
		{}
in

let mi_trie0 = sum(<mi_tuple, _> <- mi) { mi_tuple.movie_id -> { mi_tuple.info_type_id -> { mi_tuple -> 1 } } } in
let k_trie0 = sum(<k_tuple, _> <- k) { k_tuple.id -> { k_tuple -> 1 } } in
let it2_trie0 = sum(<it2_tuple, _> <- it2) { it2_tuple.id -> { it2_tuple -> 1 } } in
let it1_trie0 = sum(<it1_tuple, _> <- it1) { it1_tuple.id -> { it1_tuple -> 1 } } in
let interm1_trie0 = sum(<x0, mi_trie1> <- mi_trie0)
	if (x0 ∈ interm0_trie0) then
		let interm0_trie1 = interm0_trie0(x0) in
		sum(<x1, interm0_trie2> <- interm0_trie1)
			if (x1 ∈ k_trie0) then
				let k_trie1 = k_trie0(x1) in
				sum(<x2, interm0_trie3> <- interm0_trie2)
					if (x2 ∈ it2_trie0) then
						let it2_trie1 = it2_trie0(x2) in
						sum(<x3, mi_trie2> <- mi_trie1)
							if (x3 ∈ it1_trie0) then
								let it1_trie1 = it1_trie0(x3) in
								sum(<mi_tuple, _> <- mi_trie2)
									sum(<interm0_tuple, _> <- interm0_trie3)
										{ mi_tuple.movie_id -> { <col0=mi_tuple.movie_id, col1=mi_tuple.info_type_id, col2=mi_tuple.info, col3=interm0_tuple.col1, col4=interm0_tuple.col3, col5=interm0_tuple.col2, col6=interm0_tuple.col4> -> 1 } }
							else
								{}
					else
						{}
			else
				{}
	else
		{}
in

let ci_trie0 = sum(<ci_tuple, _> <- ci) { ci_tuple.person_id -> { ci_tuple.movie_id -> 1 } } in
let n_trie0 = sum(<n_tuple, _> <- n) { n_tuple.id -> { n_tuple -> 1 } } in
sum(<x0, ci_trie1> <- ci_trie0)
	if (x0 ∈ n_trie0) then
		let n_trie1 = n_trie0(x0) in
		sum(<x1, ci_trie2> <- ci_trie1)
			if (x1 ∈ interm1_trie0) then
				let interm1_trie1 = interm1_trie0(x1) in
				let mn_n = sum(<n_tuple, _> <- n_trie1) <name=n_tuple.name> in
				let mn_interm1 = sum(<interm1_tuple, _> <- interm1_trie1) <col2=interm1_tuple.col2, col5=interm1_tuple.col5, col6=interm1_tuple.col6> in
				<col2=mn_n.name, col4=mn_interm1.col2, col7=mn_interm1.col5, col8=mn_interm1.col6>
			else
				<col2="", col4="", col7="", col8="">
	else
		{}

