let mc = load[<id: @vector {int -> int}, movie_id: @vector {int -> int}, company_id: @vector {int -> int}, company_type_id: @vector {int -> int}, note: @vector {int -> string}, size: int>]("datasets/job/movie_companies.csv")
let cn = load[<id: @vector {int -> int}, name: @vector {int -> string}, country_code: @vector {int -> string}, imdb_id: @vector {int -> string}, name_pcode_nf: @vector {int -> string}, name_pcode_sf: @vector {int -> string}, md5sum: @vector {int -> string}, size: int>]("datasets/job/9d/cn.csv")
let ci = load[<id: @vector {int -> int}, person_id: @vector {int -> int}, movie_id: @vector {int -> int}, person_role_id: @vector {int -> int}, note: @vector {int -> string}, nr_order: @vector {int -> int}, role_id: @vector {int -> int}, size: int>]("datasets/job/9d/ci.csv")
let n = load[<id: @vector {int -> int}, name: @vector {int -> string}, imdb_index: @vector {int -> string}, imdb_id: @vector {int -> string}, gender: @vector {int -> string}, name_pcode_cf: @vector {int -> string}, name_pcode_nf: @vector {int -> string}, surname_pcode: @vector {int -> string}, md5sum: @vector {int -> string}, size: int>]("datasets/job/9d/n.csv")
let rt = load[<id: @vector {int -> int}, role: @vector {int -> string}, size: int>]("datasets/job/9d/rt.csv")
let t = load[<id: @vector {int -> int}, title: @vector {int -> string}, imdb_index: @vector {int -> string}, kind_id: @vector {int -> int}, production_year: @vector {int -> int}, imdb_id: @vector {int -> string}, phonetic_code: @vector {int -> string}, episode_of_id: @vector {int -> int}, season_nr: @vector {int -> int}, episode_nr: @vector {int -> int}, series_years: @vector {int -> string}, md5sum: @vector {int -> string}, size: int>]("datasets/job/title.csv")
let chn = load[<id: @vector {int -> int}, name: @vector {int -> string}, imdb_index: @vector {int -> string}, imdb_id: @vector {int -> int}, name_pcode_cf: @vector {int -> string}, surname_pcode: @vector {int -> string}, md5sum: @vector {int -> string}, size: int>]("datasets/job/char_name.csv")
let an = load[<id: @vector {int -> int}, person_id: @vector {int -> int}, name: @vector {int -> string}, imdb_index: @vector {int -> string}, name_pcode_cf: @vector {int -> string}, name_pcode_nf: @vector {int -> string}, surname_pcode: @vector {int -> string}, md5sum: @vector {int -> string}, size: int>]("datasets/job/aka_name.csv")

let mc_trie0 = sum(<i,_> <- range(mc.size)) { mc.company_id(i) -> @vecdict { i -> 1 } } in
let cn_trie0 = sum(<i,_> <- range(cn.size)) { cn.id(i) -> @vecdict { i -> 1 } } in
let interm0_trie0 = sum(<x0, mc_trie1> <- mc_trie0)
	if (x0 ∈ cn_trie0) then
		let cn_trie1 = cn_trie0(x0) in
		sum(<i, _> <- mc_trie1)
			{ mc.movie_id(i) -> @vecs { <col0=mc.company_id(i), col1=mc.movie_id(i)> -> 1 } }
in

let ci_trie0 = sum(<i,_> <- range(ci.size)) { ci.person_id(i) -> { ci.movie_id(i) -> { ci.role_id(i) -> { ci.person_role_id(i) -> 1 } } } } in
let n_trie0 = sum(<i,_> <- range(n.size)) { n.id(i) -> @vecdict { i -> 1 } } in
let rt_trie0 = sum(<i,_> <- range(rt.size)) { rt.id(i) -> 1 } in
let t_trie0 = sum(<i,_> <- range(t.size)) { t.id(i) -> @vecdict { i -> 1 } } in
let chn_trie0 = sum(<i,_> <- range(chn.size)) { chn.id(i) -> @vecdict { i -> 1 } } in
let an_trie0 = sum(<i,_> <- range(an.size)) { an.person_id(i) -> @vecdict { i -> 1 } } in
sum(<x0, ci_trie1> <- ci_trie0)
	if (x0 ∈ n_trie0) then
		let n_trie1 = n_trie0(x0) in
		sum(<x1, ci_trie2> <- ci_trie1)
			if (x1 ∈ interm0_trie0) then
				let interm0_trie1 = interm0_trie0(x1) in
				sum(<x2, ci_trie3> <- ci_trie2)
					if (x2 ∈ rt_trie0) then
						let rt_trie1 = rt_trie0(x2) in
						if (x1 ∈ t_trie0) then
							let t_trie1 = t_trie0(x1) in
							sum(<x4, ci_trie4> <- ci_trie3)
								if (x4 ∈ chn_trie0) then
									let chn_trie1 = chn_trie0(x4) in
									if (x0 ∈ an_trie0) then
										let an_trie1 = an_trie0(x0) in
										let mn_n = sum(<i, _> <- n_trie1) promote[min_sum](<name=n.name(i)>) in
										let mn_t = sum(<i, _> <- t_trie1) promote[min_sum](<title=t.title(i)>) in
										let mn_chn = sum(<i, _> <- chn_trie1) promote[min_sum](<name=chn.name(i)>) in
										let mn_an = sum(<i, _> <- an_trie1) promote[min_sum](<name=an.name(i)>) in
										promote[min_sum](<col4=mn_n.name, col6=mn_t.title, col7=mn_chn.name, col8=mn_an.name>)
