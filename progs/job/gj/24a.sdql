let mk = load[<id: @vec {int -> int}, movie_id: @vec {int -> int}, keyword_id: @vec {int -> int}, size: int>]("datasets/job/movie_keyword.csv")
let t = load[<id: @vec {int -> int}, title: @vec {int -> string}, imdb_index: @vec {int -> string}, kind_id: @vec {int -> int}, production_year: @vec {int -> int}, imdb_id: @vec {int -> string}, phonetic_code: @vec {int -> string}, episode_of_id: @vec {int -> int}, season_nr: @vec {int -> int}, episode_nr: @vec {int -> int}, series_years: @vec {int -> string}, md5sum: @vec {int -> string}, size: int>]("datasets/job/24a/t.csv")
let mi = load[<id: @vec {int -> int}, movie_id: @vec {int -> int}, info_type_id: @vec {int -> int}, info: @vec {int -> string}, note: @vec {int -> string}, size: int>]("datasets/job/24a/mi.csv")
let mc = load[<id: @vec {int -> int}, movie_id: @vec {int -> int}, company_id: @vec {int -> int}, company_type_id: @vec {int -> int}, note: @vec {int -> string}, size: int>]("datasets/job/movie_companies.csv")
let k = load[<id: @vec {int -> int}, keyword: @vec {int -> string}, phonetic_code: @vec {int -> string}, size: int>]("datasets/job/24a/k.csv")
let it = load[<id: @vec {int -> int}, info: @vec {int -> string}, size: int>]("datasets/job/24a/it.csv")
let cn = load[<id: @vec {int -> int}, name: @vec {int -> string}, country_code: @vec {int -> string}, imdb_id: @vec {int -> string}, name_pcode_nf: @vec {int -> string}, name_pcode_sf: @vec {int -> string}, md5sum: @vec {int -> string}, size: int>]("datasets/job/24a/cn.csv")
let n = load[<id: @vec {int -> int}, name: @vec {int -> string}, imdb_index: @vec {int -> string}, imdb_id: @vec {int -> string}, gender: @vec {int -> string}, name_pcode_cf: @vec {int -> string}, name_pcode_nf: @vec {int -> string}, surname_pcode: @vec {int -> string}, md5sum: @vec {int -> string}, size: int>]("datasets/job/24a/n.csv")
let an = load[<id: @vec {int -> int}, person_id: @vec {int -> int}, name: @vec {int -> string}, imdb_index: @vec {int -> string}, name_pcode_cf: @vec {int -> string}, name_pcode_nf: @vec {int -> string}, surname_pcode: @vec {int -> string}, md5sum: @vec {int -> string}, size: int>]("datasets/job/aka_name.csv")
let ci = load[<id: @vec {int -> int}, person_id: @vec {int -> int}, movie_id: @vec {int -> int}, person_role_id: @vec {int -> int}, note: @vec {int -> string}, nr_order: @vec {int -> int}, role_id: @vec {int -> int}, size: int>]("datasets/job/24a/ci.csv")
let chn = load[<id: @vec {int -> int}, name: @vec {int -> string}, imdb_index: @vec {int -> string}, imdb_id: @vec {int -> int}, name_pcode_cf: @vec {int -> string}, surname_pcode: @vec {int -> string}, md5sum: @vec {int -> string}, size: int>]("datasets/job/char_name.csv")
let rt = load[<id: @vec {int -> int}, role: @vec {int -> string}, size: int>]("datasets/job/24a/rt.csv")

let mk_trie0 = sum(<i, _> <- range(mk.size)) { mk.movie_id(i) -> @vecdict { i -> 1 } } in
let t_trie0 = sum(<i, _> <- range(t.size)) { t.id(i) -> @vecdict { i -> 1 } } in
let interm0_trie0 = sum(<x0, mk_trie1> <- mk_trie0)
	if (x0 ∈ t_trie0) then
		let t_trie1 = t_trie0(x0) in
		sum(<mk_off, _> <- mk_trie1)
			sum(<t_off, _> <- t_trie1)
				{ mk.movie_id(mk_off) -> { mk.keyword_id(mk_off) -> @vecdict { <col0=mk.movie_id(mk_off), col1=mk.keyword_id(mk_off), col2=t.title(t_off)> -> 1 } } }
in

let mi_trie0 = sum(<i, _> <- range(mi.size)) { mi.movie_id(i) -> { mi.info_type_id(i) -> @vecdict { i -> 1 } } } in
let mc_trie0 = sum(<i, _> <- range(mc.size)) { mc.movie_id(i) -> { mc.company_id(i) -> @vecdict { i -> 1 } } } in
let k_trie0 = sum(<i, _> <- range(k.size)) { k.id(i) -> 1 } in
let it_trie0 = sum(<i, _> <- range(it.size)) { it.id(i) -> 1 } in
let cn_trie0 = sum(<i, _> <- range(cn.size)) { cn.id(i) -> 1 } in
let interm1_trie0 = sum(<x0, mi_trie1> <- mi_trie0)
	if (x0 ∈ interm0_trie0) then
		if (x0 ∈ mc_trie0) then
			let interm0_trie1 = interm0_trie0(x0) in
			let mc_trie1 = mc_trie0(x0) in
			sum(<x1, interm0_trie2> <- interm0_trie1)
				if (x1 ∈ k_trie0) then
					let k_trie1 = k_trie0(x1) in
					sum(<x2, mi_trie2> <- mi_trie1)
						if (x2 ∈ it_trie0) then
							let it_trie1 = it_trie0(x2) in
							sum(<x3, mc_trie2> <- mc_trie1)
								if (x3 ∈ cn_trie0) then
									let cn_trie1 = cn_trie0(x3) in
									sum(<mi_off, _> <- mi_trie2)
										sum(<interm0_tuple, _> <- interm0_trie2)
											sum(<mc_off, _> <- mc_trie2)
												{ mi.movie_id(mi_off) -> @vecdict { <col0=mi.movie_id(mi_off), col1=mi.info_type_id(mi_off), col2=interm0_tuple.col1, col3=interm0_tuple.col2, col4=mc.company_id(mc_off)> -> 1 } }
in

let n_trie0 = sum(<i, _> <- range(n.size)) { n.id(i) -> @vecdict { i -> 1 } } in
let an_trie0 = sum(<i, _> <- range(an.size)) { an.person_id(i) -> 1 } in
let interm2_trie0 = sum(<x0, n_trie1> <- n_trie0)
	if (x0 ∈ an_trie0) then
		let an_trie1 = an_trie0(x0) in
		sum(<n_off, _> <- n_trie1)
			{ n.id(n_off) -> @vecdict { <col0=n.id(n_off), col1=n.name(n_off)> -> 1 } }
in

let ci_trie0 = sum(<i, _> <- range(ci.size)) { ci.person_role_id(i) -> { ci.role_id(i) -> { ci.person_id(i) -> { ci.movie_id(i) -> 1 } } } } in
let chn_trie0 = sum(<i, _> <- range(chn.size)) { chn.id(i) -> @vecdict { i -> 1 } } in
let rt_trie0 = sum(<i, _> <- range(rt.size)) { rt.id(i) -> 1 } in
sum(<x0, ci_trie1> <- ci_trie0)
	if (x0 ∈ chn_trie0) then
		let chn_trie1 = chn_trie0(x0) in
		sum(<x1, ci_trie2> <- ci_trie1)
			if (x1 ∈ rt_trie0) then
				let rt_trie1 = rt_trie0(x1) in
				sum(<x2, ci_trie3> <- ci_trie2)
					if (x2 ∈ interm2_trie0) then
						let interm2_trie1 = interm2_trie0(x2) in
						sum(<x3, ci_trie4> <- ci_trie3)
							if (x3 ∈ interm1_trie0) then
								let interm1_trie1 = interm1_trie0(x3) in
								let mn_chn = sum(<chn_off, _> <- chn_trie1) promote[min_sum](<name=chn.name(chn_off)>) in
								let mn_interm2 = sum(<interm2_tuple, _> <- interm2_trie1) promote[min_sum](<col1=interm2_tuple.col1>) in
								let mn_interm1 = sum(<interm1_tuple, _> <- interm1_trie1) promote[min_sum](<col3=interm1_tuple.col3>) in
								promote[min_sum](<col4=mn_chn.name, col5=mn_interm2.col1, col8=mn_interm1.col3>)

