let t = load[<id: @vec {int -> int}, title: @vec {int -> string}, imdb_index: @vec {int -> string}, kind_id: @vec {int -> int}, production_year: @vec {int -> int}, imdb_id: @vec {int -> string}, phonetic_code: @vec {int -> string}, episode_of_id: @vec {int -> int}, season_nr: @vec {int -> int}, episode_nr: @vec {int -> int}, series_years: @vec {int -> string}, md5sum: @vec {int -> string}, size: int>]("datasets/job/title.csv")
let mi_idx = load[<id: @vec {int -> int}, movie_id: @vec {int -> int}, info_type_id: @vec {int -> int}, info: @vec {int -> string}, note: @vec {int -> string}, size: int>]("datasets/job/movie_info_idx.csv")
let mi = load[<id: @vec {int -> int}, movie_id: @vec {int -> int}, info_type_id: @vec {int -> int}, info: @vec {int -> string}, note: @vec {int -> string}, size: int>]("datasets/job/movie_info.csv")
let it2 = load[<id: @vec {int -> int}, info: @vec {int -> string}, size: int>]("datasets/job/18a/it2.csv")
let it1 = load[<id: @vec {int -> int}, info: @vec {int -> string}, size: int>]("datasets/job/18a/it1.csv")
let ci = load[<id: @vec {int -> int}, person_id: @vec {int -> int}, movie_id: @vec {int -> int}, person_role_id: @vec {int -> int}, note: @vec {int -> string}, nr_order: @vec {int -> int}, role_id: @vec {int -> int}, size: int>]("datasets/job/18a/ci.csv")
let n = load[<id: @vec {int -> int}, name: @vec {int -> string}, imdb_index: @vec {int -> string}, imdb_id: @vec {int -> string}, gender: @vec {int -> string}, name_pcode_cf: @vec {int -> string}, name_pcode_nf: @vec {int -> string}, surname_pcode: @vec {int -> string}, md5sum: @vec {int -> string}, size: int>]("datasets/job/18a/n.csv")

let t_trie0 = sum(<i,_> <- range(t.size)) { t.id(i) -> @vecdict { i -> 1 } } in
let mi_idx_trie0 = sum(<i,_> <- range(mi_idx.size)) { mi_idx.movie_id(i) -> @vecdict { i -> 1 } } in
let interm0_trie0 = sum(<x0, t_trie1> <- t_trie0)
	if (x0 ∈ mi_idx_trie0) then
		let mi_idx_trie1 = mi_idx_trie0(x0) in
		sum(<i, _> <- t_trie1)
			sum(<j, _> <- mi_idx_trie1)
				{ t.id(i) -> { mi_idx.info_type_id(j) -> @vecs { <col0=t.id(i), col1=t.title(i), col2=mi_idx.info_type_id(j), col3=mi_idx.info(j)> -> 1 } } }
in

let mi_trie0 = sum(<i,_> <- range(mi.size)) { mi.movie_id(i) -> { mi.info_type_id(i) -> @vecdict { i -> 1 } } } in
let it2_trie0 = sum(<i,_> <- range(it2.size)) { it2.id(i) -> @vecdict { i -> 1 } } in
let it1_trie0 = sum(<i,_> <- range(it1.size)) { it1.id(i) -> @vecdict { i -> 1 } } in
let interm1_trie0 = sum(<x0, mi_trie1> <- mi_trie0)
	if (x0 ∈ interm0_trie0) then
		let interm0_trie1 = interm0_trie0(x0) in
		sum(<x1, interm0_trie2> <- interm0_trie1)
			if (x1 ∈ it2_trie0) then
				let it2_trie1 = it2_trie0(x1) in
				sum(<x2, mi_trie2> <- mi_trie1)
					if (x2 ∈ it1_trie0) then
						let it1_trie1 = it1_trie0(x2) in
						sum(<i, _> <- mi_trie2)
							sum(<interm0_tuple, _> <- interm0_trie2)
								{ mi.movie_id(i) -> @vecs { <col0=mi.movie_id(i), col1=mi.info_type_id(i), col2=mi.info(i), col3=interm0_tuple.col2, col4=interm0_tuple.col1, col5=interm0_tuple.col3> -> 1 } }
in

let ci_trie0 = sum(<i,_> <- range(ci.size)) { ci.person_id(i) -> { ci.movie_id(i) -> 1 } } in
let n_trie0 = sum(<i,_> <- range(n.size)) { n.id(i) -> 1 } in
sum(<x0, ci_trie1> <- ci_trie0)
	if (x0 ∈ n_trie0) then
		let n_trie1 = n_trie0(x0) in
		sum(<x1, ci_trie2> <- ci_trie1)
			if (x1 ∈ interm1_trie0) then
				let interm1_trie1 = interm1_trie0(x1) in
				let mn_interm1 = sum(<interm1_tuple, _> <- interm1_trie1) promote[min_sum](<col2=interm1_tuple.col2, col4=interm1_tuple.col4, col5=interm1_tuple.col5>) in
				promote[min_sum](<col3=mn_interm1.col2, col5=mn_interm1.col4, col6=mn_interm1.col5>)
