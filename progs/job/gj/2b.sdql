let mk = load_cstore[{<id: int, movie_id: int, keyword_id: int> -> int}]("datasets/job/movie_keyword.csv")
let t = load_cstore[{<id: int, title: string, imdb_index: string, kind_id: int, production_year: int, imdb_id: string, phonetic_code: string, episode_of_id: int, season_nr: int, episode_nr: int, series_years: string, md5sum: string> -> int}]("datasets/job/title.csv")
let mc = load_cstore[{<id: int, movie_id: int, company_id: int, company_type_id: int, note: string> -> int}]("datasets/job/movie_companies.csv")
let k = load_cstore[{<id: int, keyword: string, phonetic_code: string> -> int}]("datasets/job/2b/k.csv")
let cn = load_cstore[{<id: int, name: string, country_code: string, imdb_id: string, name_pcode_nf: string, name_pcode_sf: string, md5sum: string> -> int}]("datasets/job/2b/cn.csv")

let mk_trie0 =
	sum(<i,_> <- range(mk.size))
		let mk_tuple = <
			id=mk.id(i),
			movie_id=mk.movie_id(i),
			keyword_id=mk.keyword_id(i)
		>
		{ mk_tuple.movie_id -> { mk_tuple.keyword_id -> 1 } } in

let t_trie0 =
	sum(<i,_> <- range(t.size))
		let t_tuple = <
			id=t.id(i),
			title=t.title(i),
			imdb_index=t.imdb_index(i),
			kind_id=t.kind_id(i),
			production_year=t.production_year(i),
			imdb_id=t.imdb_id(i),
			phonetic_code=t.phonetic_code(i),
			episode_of_id=t.episode_of_id(i),
			season_nr=t.season_nr(i),
			episode_nr=t.episode_nr(i),
			series_years=t.series_years(i),
			md5sum=t.md5sum(i)
		>
		{ t_tuple.id -> @vecdict { t_tuple -> 1 } } in

let mc_trie0 =
	sum(<i,_> <- range(mc.size))
		let mc_tuple = <
			id=mc.id(i),
			movie_id=mc.movie_id(i),
			company_id=mc.company_id(i),
			company_type_id=mc.company_type_id(i),
			note=mc.note(i)
		>
		{ mc_tuple.movie_id -> { mc_tuple.company_id -> 1 } } in

let k_trie0 =
	sum(<i,_> <- range(k.size))
		let k_tuple = <
			id=k.id(i),
			keyword=k.keyword(i),
			phonetic_code=k.phonetic_code(i)
		>
		{ k_tuple.id -> 1 } in

let cn_trie0 =
	sum(<i,_> <- range(cn.size))
		let cn_tuple = <
			id=cn.id(i),
			name=cn.name(i),
			country_code=cn.country_code(i),
			imdb_id=cn.imdb_id(i),
			name_pcode_nf=cn.name_pcode_nf(i),
			name_pcode_sf=cn.name_pcode_sf(i),
			md5sum=cn.md5sum(i)
		>
		{ cn_tuple.id -> 1 } in

sum(<x0, mk_trie1> <- mk_trie0)
	if (x0 ∈ t_trie0) then
		if (x0 ∈ mc_trie0) then
			let t_trie1 = t_trie0(x0) in
			let mc_trie1 = mc_trie0(x0) in
			sum(<x1, mk_trie2> <- mk_trie1)
				if (x1 ∈ k_trie0) then
					let k_trie1 = k_trie0(x1) in
					sum(<x2, mc_trie2> <- mc_trie1)
						if (x2 ∈ cn_trie0) then
							let cn_trie1 = cn_trie0(x2) in
							let mn_t = sum(<t_tuple, _> <- t_trie1) promote[min_sum](<title=t_tuple.title>) in
							promote[min_sum](<col2=mn_t.title>)
