let n = load[{<id: int, name: string, imdb_index: string, imdb_id: string, gender: string, name_pcode_cf: string, name_pcode_nf: string, surname_pcode: string, md5sum: string> -> int}]("datasets/job/7a/n.csv")
let pi = load[{<id: int, person_id: int, info_type_id: int, info: string, note: string> -> int}]("datasets/job/7a/pi.csv")
let it = load[{<id: int, info: string> -> int}]("datasets/job/7a/it.csv")
let t = load[{<id: int, title: string, imdb_index: string, kind_id: int, production_year: int, imdb_id: string, phonetic_code: string, episode_of_id: int, season_nr: int, episode_nr: int, series_years: string, md5sum: string> -> int}]("datasets/job/7a/t.csv")
let ml = load[{<id: int, movie_id: int, linked_movie_id: int, link_type_id: int> -> int}]("datasets/job/movie_link.csv")
let lt = load[{<id: int, link: string> -> int}]("datasets/job/7a/lt.csv")
let ci = load[{<id: int, person_id: int, movie_id: int, person_role_id: int, note: string, nr_order: int, role_id: int> -> int}]("datasets/job/cast_info.csv")
let an = load[{<id: int, person_id: int, name: string, imdb_index: string, name_pcode_cf: string, name_pcode_nf: string, surname_pcode: string, md5sum: string> -> int}]("datasets/job/7a/an.csv")

let pi_trie0 = sum(<pi_tuple, _> <- pi) { pi_tuple.person_id -> { pi_tuple -> 1 } } in
let it_trie0 = sum(<it_tuple, _> <- it) { it_tuple.id -> 1 } in
let interm0_trie0 = sum(<n_tuple, _> <- n)
	let x0 = n_tuple.id in
	if (x0 ∈ pi_trie0) then
		let pi_trie1 = pi_trie0(x0) in
		sum(<pi_tuple, _> <- pi_trie1)
			let x1 = pi_tuple.info_type_id in
			if (x1 ∈ it_trie0) then
				let it_trie1 = it_trie0(x1) in
				{ n_tuple.id -> { <col0=n_tuple.id, col1=n_tuple.name, col2=pi_tuple.info_type_id> -> 1 } }
			else
				{}
	else
		{}
in

let ml_trie0 = sum(<ml_tuple, _> <- ml) { ml_tuple.linked_movie_id -> { ml_tuple -> 1 } } in
let lt_trie0 = sum(<lt_tuple, _> <- lt) { lt_tuple.id -> 1 } in
let interm1_trie0 = sum(<t_tuple, _> <- t)
	let x0 = t_tuple.id in
	if (x0 ∈ ml_trie0) then
		let ml_trie1 = ml_trie0(x0) in
		sum(<ml_tuple, _> <- ml_trie1)
			let x1 = ml_tuple.link_type_id in
			if (x1 ∈ lt_trie0) then
				let lt_trie1 = lt_trie0(x1) in
				{ t_tuple.id -> { <col0=t_tuple.id, col1=t_tuple.title, col2=ml_tuple.link_type_id> -> 1 } }
			else
				{}
	else
		{}
in

let interm0_trie0 = sum(<interm0_tuple, _> <- interm0) { interm0_tuple.col0 -> { interm0_tuple -> 1 } } in
let interm1_trie0 = sum(<interm1_tuple, _> <- interm1) { interm1_tuple.col0 -> { interm1_tuple -> 1 } } in
let an_trie0 = sum(<an_tuple, _> <- an) { an_tuple.person_id -> 1 } in
sum(<ci_tuple, _> <- ci)
	let x0 = ci_tuple.person_id in
	if (x0 ∈ interm0_trie0) then
		let interm0_trie1 = interm0_trie0(x0) in
		let x1 = ci_tuple.movie_id in
		if (x1 ∈ interm1_trie0) then
			let interm1_trie1 = interm1_trie0(x1) in
			if (x0 ∈ an_trie0) then
				let an_trie1 = an_trie0(x0) in
				let mn_interm1 = sum(<interm1_tuple, _> <- interm1_trie1) <col1=interm1_tuple.col1> in
				let mn_interm0 = sum(<interm0_tuple, _> <- interm0_trie1) <col1=interm0_tuple.col1> in
				<col2=mn_interm1.col1, col4=mn_interm0.col1>
			else
				<col2="", col4="">
		else
			{}
	else
		{}

