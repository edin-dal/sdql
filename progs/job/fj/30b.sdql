let cc = load[{<id: int, movie_id: int, subject_id: int, status_id: int> -> int}]("datasets/job/complete_cast.csv")
let cct1 = load[{<id: int, kind: string> -> int}]("datasets/job/30b/cct1.csv")
let cct2 = load[{<id: int, kind: string> -> int}]("datasets/job/30b/cct2.csv")
let mi_idx = load[{<id: int, movie_id: int, info_type_id: int, info: string, note: string> -> int}]("datasets/job/movie_info_idx.csv")
let it2 = load[{<id: int, info: string> -> int}]("datasets/job/30b/it2.csv")
let t = load[{<id: int, title: string, imdb_index: string, kind_id: int, production_year: int, imdb_id: string, phonetic_code: string, episode_of_id: int, season_nr: int, episode_nr: int, series_years: string, md5sum: string> -> int}]("datasets/job/30b/t.csv")
let mk = load[{<id: int, movie_id: int, keyword_id: int> -> int}]("datasets/job/movie_keyword.csv")
let k = load[{<id: int, keyword: string, phonetic_code: string> -> int}]("datasets/job/30b/k.csv")
let mi = load[{<id: int, movie_id: int, info_type_id: int, info: string, note: string> -> int}]("datasets/job/30b/mi.csv")
let it1 = load[{<id: int, info: string> -> int}]("datasets/job/30b/it1.csv")
let ci = load[{<id: int, person_id: int, movie_id: int, person_role_id: int, note: string, nr_order: int, role_id: int> -> int}]("datasets/job/30b/ci.csv")
let n = load[{<id: int, name: string, imdb_index: string, imdb_id: string, gender: string, name_pcode_cf: string, name_pcode_nf: string, surname_pcode: string, md5sum: string> -> int}]("datasets/job/30b/n.csv")

let cct2_trie0 = sum(<cct2_tuple, _> <- cct2) { cct2_tuple.id -> 1 } in
let cct1_trie0 = sum(<cct1_tuple, _> <- cct1) { cct1_tuple.id -> 1 } in
let interm0_trie0 = sum(<cc_tuple, _> <- cc)
	let x0 = cc_tuple.status_id in
	if (x0 ∈ cct2_trie0) then
		let cct2_trie1 = cct2_trie0(x0) in
		let x1 = cc_tuple.subject_id in
		if (x1 ∈ cct1_trie0) then
			let cct1_trie1 = cct1_trie0(x1) in
			{ cc_tuple.movie_id -> { <col0=cc_tuple.subject_id, col1=cc_tuple.status_id, col2=cc_tuple.movie_id> -> 1 } }
		else
			{}
	else
		{}
in

let it2_trie0 = sum(<it2_tuple, _> <- it2) { it2_tuple.id -> 1 } in
let interm0_trie0 = sum(<interm0_tuple, _> <- interm0) { interm0_tuple.col2 -> 1 } in
let interm1_trie0 = sum(<mi_idx_tuple, _> <- mi_idx)
	let x0 = mi_idx_tuple.info_type_id in
	if (x0 ∈ it2_trie0) then
		let it2_trie1 = it2_trie0(x0) in
		let x1 = mi_idx_tuple.movie_id in
		if (x1 ∈ interm0_trie0) then
			let interm0_trie1 = interm0_trie0(x1) in
			{ mi_idx_tuple.movie_id -> { <col0=mi_idx_tuple.info_type_id, col1=mi_idx_tuple.movie_id, col2=mi_idx_tuple.info> -> 1 } }
		else
			{}
	else
		{}
in

let interm1_trie0 = sum(<interm1_tuple, _> <- interm1) { interm1_tuple.col1 -> { interm1_tuple -> 1 } } in
let interm2_trie0 = sum(<t_tuple, _> <- t)
	let x0 = t_tuple.id in
	if (x0 ∈ interm1_trie0) then
		let interm1_trie1 = interm1_trie0(x0) in
		sum(<interm1_tuple, _> <- interm1_trie1)
			{ t_tuple.id -> { <col0=t_tuple.id, col1=t_tuple.title, col3=interm1_tuple.col2> -> 1 } }
	else
		{}
in

let interm2_trie0 = sum(<interm2_tuple, _> <- interm2) { interm2_tuple.col0 -> { interm2_tuple -> 1 } } in
let k_trie0 = sum(<k_tuple, _> <- k) { k_tuple.id -> 1 } in
let interm3_trie0 = sum(<mk_tuple, _> <- mk)
	let x0 = mk_tuple.movie_id in
	if (x0 ∈ interm2_trie0) then
		let interm2_trie1 = interm2_trie0(x0) in
		let x1 = mk_tuple.keyword_id in
		if (x1 ∈ k_trie0) then
			let k_trie1 = k_trie0(x1) in
			sum(<interm2_tuple, _> <- interm2_trie1)
				{ mk_tuple.movie_id -> { <col0=mk_tuple.keyword_id, col1=mk_tuple.movie_id, col2=interm2_tuple.col1, col4=interm2_tuple.col3> -> 1 } }
		else
			{}
	else
		{}
in

let it1_trie0 = sum(<it1_tuple, _> <- it1) { it1_tuple.id -> 1 } in
let interm3_trie0 = sum(<interm3_tuple, _> <- interm3) { interm3_tuple.col1 -> { interm3_tuple -> 1 } } in
let interm4_trie0 = sum(<mi_tuple, _> <- mi)
	let x0 = mi_tuple.info_type_id in
	if (x0 ∈ it1_trie0) then
		let it1_trie1 = it1_trie0(x0) in
		let x1 = mi_tuple.movie_id in
		if (x1 ∈ interm3_trie0) then
			let interm3_trie1 = interm3_trie0(x1) in
			sum(<interm3_tuple, _> <- interm3_trie1)
				{ mi_tuple.movie_id -> { <col0=mi_tuple.info_type_id, col1=mi_tuple.movie_id, col2=mi_tuple.info, col4=interm3_tuple.col2, col6=interm3_tuple.col4> -> 1 } }
		else
			{}
	else
		{}
in

let interm4_trie0 = sum(<interm4_tuple, _> <- interm4) { interm4_tuple.col1 -> { interm4_tuple -> 1 } } in
let n_trie0 = sum(<n_tuple, _> <- n) { n_tuple.id -> { n_tuple -> 1 } } in
sum(<ci_tuple, _> <- ci)
	let x0 = ci_tuple.movie_id in
	if (x0 ∈ interm4_trie0) then
		let interm4_trie1 = interm4_trie0(x0) in
		let x1 = ci_tuple.person_id in
		if (x1 ∈ n_trie0) then
			let n_trie1 = n_trie0(x1) in
			let mn_n = sum(<n_tuple, _> <- n_trie1) <name=n_tuple.name> in
			let mn_interm4 = sum(<interm4_tuple, _> <- interm4_trie1) <col2=interm4_tuple.col2, col4=interm4_tuple.col4, col6=interm4_tuple.col6> in
			<col2=mn_n.name, col4=mn_interm4.col2, col6=mn_interm4.col4, col8=mn_interm4.col6>
		else
			<col2="", col4="", col6="", col8="">
	else
		{}

