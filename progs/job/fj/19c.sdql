let mi = load[{<id: int, movie_id: int, info_type_id: int, info: string, note: string> -> int}]("datasets/job/19c/mi.csv")
let t = load[{<id: int, title: string, imdb_index: string, kind_id: int, production_year: int, imdb_id: string, phonetic_code: string, episode_of_id: int, season_nr: int, episode_nr: int, series_years: string, md5sum: string> -> int}]("datasets/job/19c/t.csv")
let mc = load[{<id: int, movie_id: int, company_id: int, company_type_id: int, note: string> -> int}]("datasets/job/movie_companies.csv")
let it = load[{<id: int, info: string> -> int}]("datasets/job/19c/it.csv")
let cn = load[{<id: int, name: string, country_code: string, imdb_id: string, name_pcode_nf: string, name_pcode_sf: string, md5sum: string> -> int}]("datasets/job/19c/cn.csv")
let n = load[{<id: int, name: string, imdb_index: string, imdb_id: string, gender: string, name_pcode_cf: string, name_pcode_nf: string, surname_pcode: string, md5sum: string> -> int}]("datasets/job/19c/n.csv")
let an = load[{<id: int, person_id: int, name: string, imdb_index: string, name_pcode_cf: string, name_pcode_nf: string, surname_pcode: string, md5sum: string> -> int}]("datasets/job/aka_name.csv")
let ci = load[{<id: int, person_id: int, movie_id: int, person_role_id: int, note: string, nr_order: int, role_id: int> -> int}]("datasets/job/19c/ci.csv")
let rt = load[{<id: int, role: string> -> int}]("datasets/job/19c/rt.csv")
let chn = load[{<id: int, name: string, imdb_index: string, imdb_id: int, name_pcode_cf: string, surname_pcode: string, md5sum: string> -> int}]("datasets/job/char_name.csv")

let it_trie0 = sum(<it_tuple, _> <- it) { it_tuple.id -> 1 } in
let t_trie0 = sum(<t_tuple, _> <- t) { t_tuple.id -> { t_tuple -> 1 } } in
let mc_trie0 = sum(<mc_tuple, _> <- mc) { mc_tuple.movie_id -> { mc_tuple -> 1 } } in
let cn_trie0 = sum(<cn_tuple, _> <- cn) { cn_tuple.id -> 1 } in
let interm0_trie0 = sum(<mi_tuple, _> <- mi)
	let x0 = mi_tuple.info_type_id in
	if (x0 ∈ it_trie0) then
		let it_trie1 = it_trie0(x0) in
		let x1 = mi_tuple.movie_id in
		if (x1 ∈ t_trie0) then
			if (x1 ∈ mc_trie0) then
				let t_trie1 = t_trie0(x1) in
				let mc_trie1 = mc_trie0(x1) in
				sum(<mc_tuple, _> <- mc_trie1)
					let x2 = mc_tuple.company_id in
					if (x2 ∈ cn_trie0) then
						let cn_trie1 = cn_trie0(x2) in
						sum(<t_tuple, _> <- t_trie1)
							{ mi_tuple.movie_id -> { <col0=mi_tuple.movie_id, col1=mi_tuple.info_type_id, col2=t_tuple.title, col3=mc_tuple.company_id> -> 1 } }
					else
						{}
			else
				{}
		else
			{}
	else
		{}
in

let an_trie0 = sum(<an_tuple, _> <- an) { an_tuple.person_id -> 1 } in
let interm1_trie0 = sum(<n_tuple, _> <- n)
	let x0 = n_tuple.id in
	if (x0 ∈ an_trie0) then
		let an_trie1 = an_trie0(x0) in
		{ n_tuple.id -> { <col0=n_tuple.id, col1=n_tuple.name> -> 1 } }
	else
		{}
in

let rt_trie0 = sum(<rt_tuple, _> <- rt) { rt_tuple.id -> 1 } in
let interm1_trie0 = sum(<interm1_tuple, _> <- interm1) { interm1_tuple.col0 -> { interm1_tuple -> 1 } } in
let interm0_trie0 = sum(<interm0_tuple, _> <- interm0) { interm0_tuple.col0 -> { interm0_tuple -> 1 } } in
let chn_trie0 = sum(<chn_tuple, _> <- chn) { chn_tuple.id -> 1 } in
sum(<ci_tuple, _> <- ci)
	let x0 = ci_tuple.role_id in
	if (x0 ∈ rt_trie0) then
		let rt_trie1 = rt_trie0(x0) in
		let x1 = ci_tuple.person_id in
		if (x1 ∈ interm1_trie0) then
			let interm1_trie1 = interm1_trie0(x1) in
			let x2 = ci_tuple.movie_id in
			if (x2 ∈ interm0_trie0) then
				let interm0_trie1 = interm0_trie0(x2) in
				let x3 = ci_tuple.person_role_id in
				if (x3 ∈ chn_trie0) then
					let chn_trie1 = chn_trie0(x3) in
					let mn_interm1 = sum(<interm1_tuple, _> <- interm1_trie1) <col1=interm1_tuple.col1> in
					let mn_interm0 = sum(<interm0_tuple, _> <- interm0_trie1) <col2=interm0_tuple.col2> in
					<col4=mn_interm1.col1, col6=mn_interm0.col2>
				else
					<col4="", col6="">
			else
				{}
		else
			{}
	else
		{}

