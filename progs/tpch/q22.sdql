let customer = load[{<c_custkey: int, c_name: varchar(25), c_address: varchar(40), c_nationkey: int, c_phone: varchar(15), c_acctbal: double, c_mktsegment: varchar(10), c_comment: varchar(117)> -> int}]("datasets/tpch/customer.tbl")

let orders = load[{<o_orderkey: int, o_custkey: int, o_orderstatus: varchar(1), o_totalprice: double, o_orderdate: date, o_orderpriority: varchar(15), o_clerk: varchar(15), o_shippriority: int, o_comment: varchar(79)> -> int}]("datasets/tpch/orders.tbl")

let _13 = ext(`ConstantString`, "13", 3)
let _31 = ext(`ConstantString`, "31", 3)
let _23 = ext(`ConstantString`, "23", 3)
let _29 = ext(`ConstantString`, "29", 3)
let _30 = ext(`ConstantString`, "30", 3)
let _18 = ext(`ConstantString`, "18", 3)
let _17 = ext(`ConstantString`, "17", 3)

let o_h =
  sum(<o,o_v> <- orders)
    { o.o_custkey -> 1 }

let fused =
  sum(<c,c_v> <- customer)
    let cond = (
                 (0.0 < c.c_acctbal) &&
                 (
                   ext(`StrStartsWith`, c.c_phone, _13) ||
                   ext(`StrStartsWith`, c.c_phone, _31) ||
                   ext(`StrStartsWith`, c.c_phone, _23) ||
                   ext(`StrStartsWith`, c.c_phone, _29) ||
                   ext(`StrStartsWith`, c.c_phone, _30) ||
                   ext(`StrStartsWith`, c.c_phone, _18) ||
                   ext(`StrStartsWith`, c.c_phone, _17)
                 )
               )
    // parsing fails without this trivial conditional - C++ compiler can optimise it away
    if(true) then
      < total = if(cond) then c.c_acctbal else 0.0, count = if(cond) then 1.0 else 0.0 >

let avg = fused.total / fused.count

let res =
  sum(<c,c_v> <- customer)
    if(
      (avg < c.c_acctbal) &&
      (!o_h(c.c_custkey)) &&
      (
        ext(`StrStartsWith`, c.c_phone, _13) ||
        ext(`StrStartsWith`, c.c_phone, _31) ||
        ext(`StrStartsWith`, c.c_phone, _23) ||
        ext(`StrStartsWith`, c.c_phone, _29) ||
        ext(`StrStartsWith`, c.c_phone, _30) ||
        ext(`StrStartsWith`, c.c_phone, _18) ||
        ext(`StrStartsWith`, c.c_phone, _17)
      )
    ) then
      { < cntrycode = ext(`SubString`, c.c_phone, 0, 2) > -> < numcust = 1, totacctbal = c.c_acctbal > }
    else
      { }

sum(<k,v> <- res)
  { unique(concat(k,v)) -> 1 }
