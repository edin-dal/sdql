let orders = load[{<o_orderkey: int, o_custkey: int, o_orderstatus: string, o_totalprice: double, o_orderdate: date, o_orderpriority: string, o_clerk: string, o_shippriority: int, o_comment: string> -> int}]("datasets/tpch/orders.tbl")

let lineitem = load[{<l_orderkey: int, l_partkey: int, l_suppkey: int, l_linenumber: int, l_quantity: double, l_extendedprice: double, l_discount: double, l_tax: double, l_returnflag: string, l_linestatus: string, l_shipdate: date, l_commitdate: date, l_receiptdate: date, l_shipinstruct: string, l_shipmode: string, l_comment: string> -> int}]("datasets/tpch/lineitem.tbl")

let l_h =
  sum(<l,l_v> in lineitem)
    if(
      ((l.l_shipmode == "MAIL") || (l.l_shipmode == "SHIP"))
      && (date(19940101) < l.l_receiptdate)
      && (l.l_receiptdate < date(19950101))
      && (l.l_shipdate < l.l_commitdate)
      && (l.l_commitdate < l.l_receiptdate)
    ) then
      { l.l_orderkey -> { l.l_shipmode -> 1 } }
    else
      { }

let o_h =
  sum(<o,o_v> in orders)
    if(l_h(o.o_orderkey) != {}) then
      sum(<l_shipmode,_> in l_h(o.o_orderkey))
        {
          < _ = l_shipmode >
          -> <
          high_line_count = if ((o.o_orderpriority == "1-URGENT") || (o.o_orderpriority == "2-HIGH")) then 1 else 0,
          low_line_count = if ((o.o_orderpriority != "1-URGENT") && (o.o_orderpriority != "2-HIGH")) then 1 else 0
          >
        }
    else
      { }

sum(<k,v> <- o_h)
  { concat(k,v) -> 1 }
