let lineitem = load[{<l_orderkey: int, l_partkey: int, l_suppkey: int, l_linenumber: int, l_quantity: double, l_extendedprice: double, l_discount: double, l_tax: double, l_returnflag: varchar(1), l_linestatus: varchar(1), l_shipdate: date, l_commitdate: date, l_receiptdate: date, l_shipinstruct: varchar(25), l_shipmode: varchar(10), l_comment: varchar(44)> -> int}]("datasets/tpch/lineitem.tbl")

let part = load[{<p_partkey: int, p_name: varchar(55), p_mfgr: varchar(25), p_brand: varchar(10), p_type: varchar(25), p_size: int, p_container: varchar(10), p_retailprice: double, p_comment: varchar(23)> -> int}]("datasets/tpch/part.tbl")

let brand12 = ext(`ConstantString`, "Brand#12", 9)
let brand23 = ext(`ConstantString`, "Brand#23", 9)
let brand34 = ext(`ConstantString`, "Brand#34", 9)
let smcase = ext(`ConstantString`, "SM CASE", 8)
let smbox = ext(`ConstantString`, "SM BOX", 7)
let smpack = ext(`ConstantString`, "SM PACK", 8)
let smpkg = ext(`ConstantString`, "SM PKG", 7)
let mdbag = ext(`ConstantString`, "MED BAG", 8)
let mdbox = ext(`ConstantString`, "MED BOX", 8)
let mdpack = ext(`ConstantString`, "MED PACK", 9)
let mdpkg = ext(`ConstantString`, "MED PKG", 8)
let lgcase = ext(`ConstantString`, "LG CASE", 8)
let lgbox = ext(`ConstantString`, "LG BOX", 7)
let lgpack = ext(`ConstantString`, "LG PACK", 8)
let lgpkg = ext(`ConstantString`, "LG PKG", 7)
let air = ext(`ConstantString`, "AIR", 4)
let airreg = ext(`ConstantString`, "AIR REG", 8)
let deliverinperson = ext(`ConstantString`, "DELIVER IN PERSON", 18)

let p_h =
  sum(<p,p_v> in part)
    if(
        (
          (p.p_brand == brand12)
          && (
               (p.p_container == smcase)
               || (p.p_container == smbox)
               || (p.p_container == smpack)
               || (p.p_container == smpkg)
             )
          && (1 <= p.p_size) && (p.p_size <= 5)
        )
        || (
          (p.p_brand == brand23)
          && (
               (p.p_container == mdbag)
               || (p.p_container == mdbox)
               || (p.p_container == mdpack)
               || (p.p_container == mdpkg)
             )
          && (1 <= p.p_size) && (p.p_size <= 10)
        )
        || (
          (p.p_brand == brand34)
          && (
               (p.p_container == lgcase)
               || (p.p_container == lgbox)
               || (p.p_container == lgpack)
               || (p.p_container == lgpkg)
             )
          && (1 <= p.p_size) && (p.p_size <= 15)
        )
    ) then
      { unique(p.p_partkey) ->
        <
          p_brand = p.p_brand,
          p_size = p.p_size,
          p_container = p.p_container
        >
      }
    else
      { }

let res =
  sum(<l,l_v> in lineitem)
    let p_brand = p_h(l.l_partkey)(0)
    if(
      (p_h(l.l_partkey) != {})
      && ((l.l_shipmode == air) || (l.l_shipmode == airreg))
      && (l.l_shipinstruct == deliverinperson)
      && (
           (
             (p_brand == brand12)
             && (1 <= l.l_quantity) && (l.l_quantity <= 11)
           )
           || (
             (p_brand == brand23)
             && (10 <= l.l_quantity) && (l.l_quantity <= 20)
           )
           || (
             (p_brand == brand34)
             && (20 <= l.l_quantity) && (l.l_quantity <= 30)
           )
      )
    ) then
      l.l_extendedprice * (1.0 - l.l_discount)
    else
      0.0

{ < revenue = res > -> 1 }
