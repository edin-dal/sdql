let lineitem = load[<l_orderkey: @vector {int -> int}, l_partkey: @vector {int -> int}, l_suppkey: @vector {int -> int}, l_linenumber: @vector {int -> int}, l_quantity: @vector {int -> double}, l_extendedprice: @vector {int -> double}, l_discount: @vector {int -> double}, l_tax: @vector {int -> double}, l_returnflag: @vector {int -> varchar(1)}, l_linestatus: @vector {int -> varchar(1)}, l_shipdate: @vector {int -> date}, l_commitdate: @vector {int -> date}, l_receiptdate: @vector {int -> date}, l_shipinstruct: @vector {int -> varchar(25)}, l_shipmode: @vector {int -> varchar(10)}, l_comment: @vector {int -> varchar(44)}, size: int>]("datasets/tpch/lineitem.tbl")

let part = load[<p_partkey: @vector {int -> int}, p_name: @vector {int -> varchar(55)}, p_mfgr: @vector {int -> varchar(25)}, p_brand: @vector {int -> varchar(10)}, p_type: @vector {int -> varchar(25)}, p_size: @vector {int -> int}, p_container: @vector {int -> varchar(10)}, p_retailprice: @vector {int -> double}, p_comment: @vector {int -> varchar(23)}, size: int>]("datasets/tpch/part.tbl")

let brand12 = ext(`ConstantString`, "Brand#12", 9)
let brand23 = ext(`ConstantString`, "Brand#23", 9)
let brand34 = ext(`ConstantString`, "Brand#34", 9)
let smcase = ext(`ConstantString`, "SM CASE", 8)
let smbox = ext(`ConstantString`, "SM BOX", 7)
let smpack = ext(`ConstantString`, "SM PACK", 8)
let smpkg = ext(`ConstantString`, "SM PKG", 7)
let mdbag = ext(`ConstantString`, "MED BAG", 8)
let mdbox = ext(`ConstantString`, "MED BOX", 8)
let mdpack = ext(`ConstantString`, "MED PACK", 9)
let mdpkg = ext(`ConstantString`, "MED PKG", 8)
let lgcase = ext(`ConstantString`, "LG CASE", 8)
let lgbox = ext(`ConstantString`, "LG BOX", 7)
let lgpack = ext(`ConstantString`, "LG PACK", 8)
let lgpkg = ext(`ConstantString`, "LG PKG", 7)
let air = ext(`ConstantString`, "AIR", 4)
let airreg = ext(`ConstantString`, "AIR REG", 8)
let deliverinperson = ext(`ConstantString`, "DELIVER IN PERSON", 18)

let p_h =
  sum(<i,_> <- range(part.size))
    let p = <
      p_partkey=part.p_partkey(i),
      p_name=part.p_name(i),
      p_mfgr=part.p_mfgr(i),
      p_brand=part.p_brand(i),
      p_type=part.p_type(i),
      p_size=part.p_size(i),
      p_container=part.p_container(i),
      p_retailprice=part.p_retailprice(i),
      p_comment=part.p_comment(i)
    >
    if(
        (
          (p.p_brand == brand12)
          && (
               (p.p_container == smcase)
               || (p.p_container == smbox)
               || (p.p_container == smpack)
               || (p.p_container == smpkg)
             )
          && (1 <= p.p_size) && (p.p_size <= 5)
        )
        || (
          (p.p_brand == brand23)
          && (
               (p.p_container == mdbag)
               || (p.p_container == mdbox)
               || (p.p_container == mdpack)
               || (p.p_container == mdpkg)
             )
          && (1 <= p.p_size) && (p.p_size <= 10)
        )
        || (
          (p.p_brand == brand34)
          && (
               (p.p_container == lgcase)
               || (p.p_container == lgbox)
               || (p.p_container == lgpack)
               || (p.p_container == lgpkg)
             )
          && (1 <= p.p_size) && (p.p_size <= 15)
        )
    ) then
      { unique(p.p_partkey) ->
        <
          p_brand = p.p_brand,
          p_size = p.p_size,
          p_container = p.p_container
        >
      }
    else
      { }

let res =
  sum(<i,_> <- range(lineitem.size))
    let l = <
      l_orderkey=lineitem.l_orderkey(i),
      l_partkey=lineitem.l_partkey(i),
      l_suppkey=lineitem.l_suppkey(i),
      l_linenumber=lineitem.l_linenumber(i),
      l_quantity=lineitem.l_quantity(i),
      l_extendedprice=lineitem.l_extendedprice(i),
      l_discount=lineitem.l_discount(i),
      l_tax=lineitem.l_tax(i),
      l_returnflag=lineitem.l_returnflag(i),
      l_linestatus=lineitem.l_linestatus(i),
      l_shipdate=lineitem.l_shipdate(i),
      l_commitdate=lineitem.l_commitdate(i),
      l_receiptdate=lineitem.l_receiptdate(i),
      l_shipinstruct=lineitem.l_shipinstruct(i),
      l_shipmode=lineitem.l_shipmode(i),
      l_comment=lineitem.l_comment(i)
    >
    let p_brand = p_h(l.l_partkey)(0)
    if(
      (p_h(l.l_partkey) != {})
      && ((l.l_shipmode == air) || (l.l_shipmode == airreg))
      && (l.l_shipinstruct == deliverinperson)
      && (
           (
             (p_brand == brand12)
             && (1 <= l.l_quantity) && (l.l_quantity <= 11)
           )
           || (
             (p_brand == brand23)
             && (10 <= l.l_quantity) && (l.l_quantity <= 20)
           )
           || (
             (p_brand == brand34)
             && (20 <= l.l_quantity) && (l.l_quantity <= 30)
           )
      )
    ) then
      l.l_extendedprice * (1.0 - l.l_discount)
    else
      0.0

{ < revenue = res > -> 1 }
