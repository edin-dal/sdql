let customer = load[{<c_custkey: int, c_name: string, c_address: string, c_nationkey: int, c_phone: string, c_acctbal: double, c_mktsegment: string, c_comment: string> -> int}]("datasets/tpch/customer.tbl")

let orders = load[{<o_orderkey: int, o_custkey: int, o_orderstatus: string, o_totalprice: double, o_orderdate: date, o_orderpriority: string, o_clerk: string, o_shippriority: int, o_comment: string> -> int}]("datasets/tpch/orders.tbl")

let lineitem = load[{<l_orderkey: int, l_partkey: int, l_suppkey: int, l_linenumber: int, l_quantity: double, l_extendedprice: double, l_discount: double, l_tax: double, l_returnflag: string, l_linestatus: string, l_shipdate: date, l_commitdate: date, l_receiptdate: date, l_shipinstruct: string, l_shipmode: string, l_comment: string> -> int}]("datasets/tpch/lineitem.tbl")

let supplier = load[{<s_suppkey: int, s_name: string, s_address: string, s_nationkey: int, s_phone: string, s_acctbal: double, s_comment: string> -> int}]("datasets/tpch/supplier.tbl")

let nation = load[{<n_nationkey: int, n_name: string, n_regionkey: int, r_comment: string> -> int}]("datasets/tpch/nation.tbl")

let region = load[{<r_regionkey: int, r_name: string, r_comment: string> -> int}]("datasets/tpch/region.tbl")

let r_h =
  sum(<r,r_v> in region)
    if(r.r_name == "ASIA") then
      { r.r_regionkey -> < _ = r.r_regionkey > }
    else
      { }

let n_h =
  sum(<n,n_v> in nation)
    if(r_h(n.n_regionkey) != {}) then
      { n.n_nationkey -> n.n_name }
    else
      { }

let c_h =
  sum(<c,c_v> in customer)
    if(n_h(c.c_nationkey) != {}) then
      { c.c_custkey -> < _ =n_h(c.c_nationkey), _ = c.c_nationkey > }
    else
      { }

let o_h =
  sum(<o,o_v> in orders)
    if(
        (o.o_orderdate < date(19950101))
        && (date(19940101) <= o.o_orderdate)
        && (c_h(o.o_custkey) != {})
      ) then
      { o.o_orderkey -> < _ = c_h(o.o_custkey)(0), _ = c_h(o.o_custkey)(1) > }
    else
      { }

let s_h =
  sum(<s,s_v> in supplier)
    { < _ = s.s_suppkey, _ = s.s_nationkey > -> 1 }

// TODO
// let li_h =
  sum(<l, l_v> <- lineitem)
    if(
        (o_h(l.l_orderkey) != {})
        && (s_h(< _ = l.l_suppkey, _ = o_h(l.l_orderkey)(1) >) != {})
      ) then
      { o_h(l.l_orderkey)(0) -> l.l_extendedprice * (1.0 - l.l_discount) }
    else
      { }

// TODO flatten li_h by concatenating keys and values (map to 1)
// note: sum or for loop should both work as keys are distinct
// sum(<k, v> <- li_h)
//  { < _ = k._0, _ = v._0 > -> 1 }
