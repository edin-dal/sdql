let part = load[<p_partkey: @vector {int -> int}, p_name: @vector {int -> varchar(55)}, p_mfgr: @vector {int -> varchar(25)}, p_brand: @vector {int -> varchar(10)}, p_type: @vector {int -> varchar(25)}, p_size: @vector {int -> int}, p_container: @vector {int -> varchar(10)}, p_retailprice: @vector {int -> double}, p_comment: @vector {int -> varchar(23)}, size: int>]("datasets/tpch/part.tbl")

let supplier = load[<s_suppkey: @vector {int -> int}, s_name: @vector {int -> varchar(25)}, s_address: @vector {int -> varchar(40)}, s_nationkey: @vector {int -> int}, s_phone: @vector {int -> varchar(15)}, s_acctbal: @vector {int -> double}, s_comment: @vector {int -> varchar(101)}, size: int>]("datasets/tpch/supplier.tbl")

let lineitem = load[<l_orderkey: @vector {int -> int}, l_partkey: @vector {int -> int}, l_suppkey: @vector {int -> int}, l_linenumber: @vector {int -> int}, l_quantity: @vector {int -> double}, l_extendedprice: @vector {int -> double}, l_discount: @vector {int -> double}, l_tax: @vector {int -> double}, l_returnflag: @vector {int -> varchar(1)}, l_linestatus: @vector {int -> varchar(1)}, l_shipdate: @vector {int -> date}, l_commitdate: @vector {int -> date}, l_receiptdate: @vector {int -> date}, l_shipinstruct: @vector {int -> varchar(25)}, l_shipmode: @vector {int -> varchar(10)}, l_comment: @vector {int -> varchar(44)}, size: int>]("datasets/tpch/lineitem.tbl")

let partsupp = load[<ps_partkey: @vector {int -> int}, ps_suppkey: @vector {int -> int}, ps_availqty: @vector {int -> double}, ps_supplycost: @vector {int -> double}, ps_comment: @vector {int -> varchar(199)}, size: int>]("datasets/tpch/partsupp.tbl")

let orders = load[<o_orderkey: @vector {int -> int}, o_custkey: @vector {int -> int}, o_orderstatus: @vector {int -> varchar(1)}, o_totalprice: @vector {int -> double}, o_orderdate: @vector {int -> date}, o_orderpriority: @vector {int -> varchar(15)}, o_clerk: @vector {int -> varchar(15)}, o_shippriority: @vector {int -> int}, o_comment: @vector {int -> varchar(79)}, size: int>]("datasets/tpch/orders.tbl")

let nation = load[<n_nationkey: @vector {int -> int}, n_name: @vector {int -> varchar(25)}, n_regionkey: @vector {int -> int}, n_comment: @vector {int -> varchar(152)}, size: int>]("datasets/tpch/nation.tbl")

let green = ext(`ConstantString`,"green", 6)

let n_h =
  sum(<i,_> <- range(nation.size))
    let n = <
      n_nationkey=nation.n_nationkey(i),
      n_name=nation.n_name(i),
      n_regionkey=nation.n_regionkey(i),
      n_comment=nation.n_comment(i)
    >
    { unique(n.n_nationkey) -> < _ = n.n_name > }

let s_h =
  sum(<i,_> <- range(supplier.size))
    let s = <
      s_suppkey=supplier.s_suppkey(i),
      s_name=supplier.s_name(i),
      s_address=supplier.s_address(i),
      s_nationkey=supplier.s_nationkey(i),
      s_phone=supplier.s_phone(i),
      s_acctbal=supplier.s_acctbal(i),
      s_comment=supplier.s_comment(i)
    >
    { unique(s.s_suppkey) -> n_h(s.s_nationkey)(0) }

let p_h =
  sum(<i,_> <- range(part.size))
    let p = <
      p_partkey=part.p_partkey(i),
      p_name=part.p_name(i),
      p_mfgr=part.p_mfgr(i),
      p_brand=part.p_brand(i),
      p_type=part.p_type(i),
      p_size=part.p_size(i),
      p_container=part.p_container(i),
      p_retailprice=part.p_retailprice(i),
      p_comment=part.p_comment(i)
    >
    if(ext(`StrContains`, p.p_name, green)) then
      { unique(p.p_partkey) -> < _ = p.p_partkey > }
    else
      { }

let ps_h =
  sum(<i,_> <- range(partsupp.size))
    let ps = <
      ps_partkey=partsupp.ps_partkey(i),
      ps_suppkey=partsupp.ps_suppkey(i),
      ps_availqty=partsupp.ps_availqty(i),
      ps_supplycost=partsupp.ps_supplycost(i),
      ps_comment=partsupp.ps_comment(i)
    >
    if(p_h(ps.ps_partkey) != {}) then
      { unique(< _ = ps.ps_partkey, _ = ps.ps_suppkey >) -> < _ = s_h(ps.ps_suppkey), _ = ps.ps_supplycost > }
    else
      { }

let o_h =
  sum(<i,_> <- range(orders.size))
    let o = <
      o_orderkey=orders.o_orderkey(i),
      o_custkey=orders.o_custkey(i),
      o_orderstatus=orders.o_orderstatus(i),
      o_totalprice=orders.o_totalprice(i),
      o_orderdate=orders.o_orderdate(i),
      o_orderpriority=orders.o_orderpriority(i),
      o_clerk=orders.o_clerk(i),
      o_shippriority=orders.o_shippriority(i),
      o_comment=orders.o_comment(i)
    >
    @vector { o.o_orderkey -> o.o_orderdate }

let l_h =
  sum(<i,_> <- range(lineitem.size))
    let l = <
      l_orderkey=lineitem.l_orderkey(i),
      l_partkey=lineitem.l_partkey(i),
      l_suppkey=lineitem.l_suppkey(i),
      l_linenumber=lineitem.l_linenumber(i),
      l_quantity=lineitem.l_quantity(i),
      l_extendedprice=lineitem.l_extendedprice(i),
      l_discount=lineitem.l_discount(i),
      l_tax=lineitem.l_tax(i),
      l_returnflag=lineitem.l_returnflag(i),
      l_linestatus=lineitem.l_linestatus(i),
      l_shipdate=lineitem.l_shipdate(i),
      l_commitdate=lineitem.l_commitdate(i),
      l_receiptdate=lineitem.l_receiptdate(i),
      l_shipinstruct=lineitem.l_shipinstruct(i),
      l_shipmode=lineitem.l_shipmode(i),
      l_comment=lineitem.l_comment(i)
    >
    if(ps_h(< _ = l.l_partkey, _ = l.l_suppkey >) != {}) then
      {
        <
          nation = ps_h(< _ = l.l_partkey, _ = l.l_suppkey >)(0),
           o_year =  o_h(l.l_orderkey) / 10000
        > ->
         < um_profit = l.l_extendedprice * (1.0 - l.l_discount) - ps_h(< _ = l.l_partkey, _ = l.l_suppkey >)(1) * l.l_quantity >
      }
    else
      { }

sum(<k,v> <- l_h)
  { unique(concat(k,v)) -> 1 }
