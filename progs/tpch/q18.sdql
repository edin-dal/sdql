let customer = load[{<c_custkey: int, c_name: varchar(25), c_address: varchar(40), c_nationkey: int, c_phone: varchar(15), c_acctbal: double, c_mktsegment: varchar(10), c_comment: varchar(117)> -> int}]("datasets/tpch/customer.tbl")

let orders = load[{<o_orderkey: int, o_custkey: int, o_orderstatus: varchar(1), o_totalprice: double, o_orderdate: date, o_orderpriority: varchar(15), o_clerk: varchar(15), o_shippriority: int, o_comment: varchar(79)> -> int}]("datasets/tpch/orders.tbl")

let lineitem = load[{<l_orderkey: int, l_partkey: int, l_suppkey: int, l_linenumber: int, l_quantity: double, l_extendedprice: double, l_discount: double, l_tax: double, l_returnflag: varchar(1), l_linestatus: varchar(1), l_shipdate: date, l_commitdate: date, l_receiptdate: date, l_shipinstruct: varchar(25), l_shipmode: varchar(10), l_comment: varchar(44)> -> int}]("datasets/tpch/lineitem.tbl")

let l_h =
  sum(<l,l_v> in lineitem)
    { l.l_orderkey -> l.l_quantity }

let orderkeys =
  sum_unique(<l_orderkey,l_quantity> in l_h)
    if(300 < l_quantity) then
      { l_orderkey -> 1 }
    else
      { }

let custkey_to_name =
  sum_unique(<c,c_v> in customer)
    { c.c_custkey -> < _ = c.c_name > }

let o_h =
  sum_unique(<o,o_v> in orders)
    if((orderkeys(o.o_orderkey) != {}) && (custkey_to_name(o.o_custkey) != {})) then
      {
        o.o_orderkey ->
        <
          name = custkey_to_name(o.o_custkey)(0),
          custkey = o.o_custkey,
          orderkey = o.o_orderkey,
          orderdate = o.o_orderdate,
          totalprice = o.o_totalprice
        >
      }
    else
      { }

let result_h =
  sum(<l,l_v> in lineitem)
    if(o_h(l.l_orderkey) != {}) then
      { o_h(l.l_orderkey) -> < _ = l.l_quantity > }
    else
      { }

sum_unique(<k,v> <- result_h)
  { concat(k,v) -> 1 }
