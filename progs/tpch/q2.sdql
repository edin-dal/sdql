let part = load[{<p_partkey: int, p_name: varchar(55), p_mfgr: varchar(25), p_brand: varchar(10), p_type: varchar(25), p_size: int, p_container: varchar(10), p_retailprice: double, p_comment: varchar(23)> -> int}]("datasets/tpch/part.tbl")

let supplier = load[{<s_suppkey: int, s_name: varchar(25), s_address: varchar(40), s_nationkey: int, s_phone: varchar(15), s_acctbal: double, s_comment: varchar(101)> -> int}]("datasets/tpch/supplier.tbl")

let partsupp = load[{<ps_partkey: int, ps_suppkey: int, ps_availqty: double, ps_supplycost: double, ps_comment: varchar(199)> -> int}]("datasets/tpch/partsupp.tbl")

let nation = load[{<n_nationkey: int, n_name: varchar(25), n_regionkey: int, r_comment: varchar(152)> -> int}]("datasets/tpch/nation.tbl")

let region = load[{<r_regionkey: int, r_name: varchar(25), r_comment: varchar(152)> -> int}]("datasets/tpch/region.tbl")

let brass = ext(`ConstantString`,"BRASS", 6)
let europe = ext(`ConstantString`,"EUROPE", 7)

let l_h =
  sum(<r,r_v> <- region)
    if(r.r_name == europe) then
      { unique(r.r_regionkey) -> < _ = r.r_regionkey > }
    else
      { }

let n_h =
  sum(<n,n_v> <- nation)
    if(l_h(n.n_regionkey) != {}) then
      { unique(n.n_nationkey) -> n.n_name }
    else
      { }

let s_h =
  sum(<s,s_v> <- supplier)
    if(n_h(s.s_nationkey) != {}) then
      {
        unique(s.s_suppkey) ->
        <
          _ = s.s_acctbal,
          _ = s.s_name,
          _ = n_h(s.s_nationkey),
          _ = s.s_address,
          _ = s.s_phone,
          _ = s.s_comment
        >
      }
    else
      { }

let p_h =
  sum(<p,p_v> <- part)
    if((p.p_size == 15) && (ext(`StrEndsWith`, p.p_type, brass))) then
      { unique(p.p_partkey) -> < _ = p.p_mfgr > }
    else
      { }

let ps_h =
  sum(<ps,ps_v> <- partsupp)
    if ((p_h(ps.ps_partkey) != {}) && (s_h(ps.ps_suppkey) != {})) then
      { ps.ps_partkey -> ps.ps_supplycost }
    else
      { }

sum(<ps,ps_v> <- partsupp)
  if(
      (ps_h(ps.ps_partkey) != {})
      && (ps_h(ps.ps_partkey) == ps.ps_supplycost)
      && (s_h(ps.ps_suppkey) != {})
    ) then
    {
      unique(<
        _ = s_h(ps.ps_suppkey)(0),
        _ = s_h(ps.ps_suppkey)(1),
        _ = s_h(ps.ps_suppkey)(2),
        _ = ps.ps_partkey,
        _ = p_h(ps.ps_partkey)(0),
        _ = s_h(ps.ps_suppkey)(4),
        _ = s_h(ps.ps_suppkey)(3),
        _ = s_h(ps.ps_suppkey)(5)
      >) -> 1
    }
  else
    { }
